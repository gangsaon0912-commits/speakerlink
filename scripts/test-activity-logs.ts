import { createClient } from '@supabase/supabase-js'
import dotenv from 'dotenv'

dotenv.config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function testActivityLogs() {
  try {
    console.log('üß™ Testing activity logs...')
    
    // ÏÉàÎ°úÏö¥ ÌôúÎèô Î°úÍ∑∏ ÏÉùÏÑ±
    const testActivities = [
      {
        type: 'instructor_registration',
        title: 'ÌÖåÏä§Ìä∏ Í∞ïÏÇ¨ Îì±Î°ù',
        description: 'ÌÖåÏä§Ìä∏ Í∞ïÏÇ¨ÎãòÏù¥ Í∞ïÏÇ¨Î°ú Îì±Î°ùÌñàÏäµÎãàÎã§.',
        user_name: 'ÌÖåÏä§Ìä∏ Í∞ïÏÇ¨',
        created_at: new Date().toISOString()
      },
      {
        type: 'project_created',
        title: 'ÌÖåÏä§Ìä∏ ÌîÑÎ°úÏ†ùÌä∏ ÏÉùÏÑ±',
        description: 'ÌÖåÏä§Ìä∏ Í∏∞ÏóÖÏù¥ "ÌÖåÏä§Ìä∏ ÌîÑÎ°úÏ†ùÌä∏"Î•º ÏÉùÏÑ±ÌñàÏäµÎãàÎã§.',
        user_name: 'ÌÖåÏä§Ìä∏ Í∏∞ÏóÖ',
        created_at: new Date(Date.now() - 5 * 60 * 1000).toISOString()
      },
      {
        type: 'announcement_published',
        title: 'ÌÖåÏä§Ìä∏ Í≥µÏßÄÏÇ¨Ìï≠ Î∞úÌñâ',
        description: '"ÌÖåÏä§Ìä∏ Í≥µÏßÄÏÇ¨Ìï≠"Ïù¥ Î∞úÌñâÎêòÏóàÏäµÎãàÎã§.',
        user_name: 'Í¥ÄÎ¶¨Ïûê',
        created_at: new Date(Date.now() - 10 * 60 * 1000).toISOString()
      }
    ]

    console.log('üìù Inserting test activities...')
    
    for (const activity of testActivities) {
      const { error } = await supabase
        .from('activity_logs')
        .insert(activity)
      
      if (error) {
        console.error('‚ùå Error inserting activity:', error)
      } else {
        console.log('‚úÖ Activity inserted:', activity.title)
      }
    }

    // ÏµúÏã† ÌôúÎèô Î°úÍ∑∏ ÌôïÏù∏
    console.log('\nüìã Latest activity logs:')
    const { data: latestActivities, error } = await supabase
      .from('activity_logs')
      .select('*')
      .order('created_at', { ascending: false })
      .limit(5)

    if (error) {
      console.error('‚ùå Error fetching activities:', error)
    } else {
      latestActivities?.forEach((activity, index) => {
        console.log(`${index + 1}. ${activity.title} - ${activity.user_name} (${new Date(activity.created_at).toLocaleString()})`)
      })
    }

    console.log('\nüéâ Activity logs test completed!')

  } catch (error) {
    console.error('‚ùå Error in testActivityLogs:', error)
  }
}

testActivityLogs()
